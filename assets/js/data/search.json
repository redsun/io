[ { "title": "跑步", "url": "/posts/%E8%B7%91%E6%AD%A5/", "categories": "生活小记, 跑步", "tags": "", "date": "2022-04-10 20:55:00 +0800", "snippet": "春暖花开，是时候动起来了！前阵子坚持了一周，后来… 就没有后来了后来又开了个团，结果拼团失败😄今天，换上装备，跑一圈去~" }, { "title": "单词本", "url": "/posts/%E5%8D%95%E8%AF%8D%E6%9C%AC/", "categories": "单词本", "tags": "", "date": "2022-03-31 14:53:00 +0800", "snippet": "记录点单词~ 单词 音标 翻译 slightly [ˈslaɪtli] adv. 稍微，轻微地；（指某人身材）纤弱地，瘦小地 relevant [ˈreləvənt] adj. 有关的，切题的；正确的，适宜的；有价值的，有意义的 worthwhile [ˌwɜːθˈwaɪl] adj. 重要的，有益的，值得做的 terminology [ˌtɜːmɪˈnɒlədʒi] n. （某学科的）术语；有特别含义的用语，专门用语；术语学 latter [ˈlætə(r)] n. （两者之间的）后者（the latter） build artifacts [‘a:rtifækts] 构建构件 tweak [twiːk] n. 扭，拧；微调，稍微调整；轻微的拉伤（或扭伤） teardown [ˈteəˌdaʊn] n. 拆卸；待拆房屋 duplicate [ˈdjuːplɪkeɪt] v. 复制，复印；（无必要地）重复（某事）；使成倍增加 stride [straɪd] n. 大步，阔步；步态，步伐； recurse   v. 递归 " }, { "title": "参与翻译", "url": "/posts/%E5%8F%82%E4%B8%8E%E7%BF%BB%E8%AF%91/", "categories": "生活小记, 杂", "tags": "", "date": "2022-03-26 10:18:00 +0800", "snippet": "参与Vapor文档翻译，贡献一下开源社区。各种工具都上，加之自己理解，申请PR…遥想当年四级考试，准考证都能打牌用了。结果没让我失望…为什么要翻译这个文档，一切貌似都是巧合。故事开始于一台R2S软路由，让我萌生了一个想法，至于结果会走向何方，嗯…还是个未知数。先学习，然后解决问题，只是选择的方式很特别罢了😂。大概就这样~🚗" }, { "title": "一岁", "url": "/posts/%E4%B8%80%E5%B2%81/", "categories": "生活小记, 生日", "tags": "", "date": "2022-03-25 20:55:00 +0800", "snippet": "小宝贝一岁啦~花了十几分钟用胡萝卜刻了一个生日快乐，来一点仪式感~媳妇买的气球，小挂件，忙活了半小时，挂起来，彩灯亮起来~一岁抓周,第一个抓了个金算盘，第二个抓了个三字经，第三个抓了个笛子。将来是企业家？学霸？音乐家？这些都不重要，只要你健康快乐的成长，老爹就满意了~最后，感谢侯总，辛苦了~" }, { "title": "Git Submodule", "url": "/posts/git-submodule/", "categories": "开发, 工具", "tags": "tools", "date": "2022-03-22 11:24:00 +0800", "snippet": "Submodule子模块允许你将一个Git仓库作为另一个Git仓库的子目录。 它能让你将另一个仓库克隆到自己的项目中，同时还保持提交的独立。添加submodulegit submodule add url 显示submodule摘要git config --global status.submoduleSummary true协作者克隆# 首次克隆带有submodule的仓库，默认submodule仓库是空的git submodule init #①初始化git submodule update #②拉取submodule仓库代码git submodule update --init #①②合并操作git submodule update --init --recursive #如果子模块还有嵌套的，一并初始化并拉取代码git clone --recurse-submodules url # 克隆时就把submodule初始化并拉取代码更新submodulegit fetch #①拉取git merge origin/master #②合并git submodule update --remote #①②合并操作 也可指定submodule进行更新git submodule update --remote --merge #手动合并，防止上游分支冲掉本地分支的修改git submodule update --remote --rebase #使用rebase方式合并submodule更改分支#子模块默认跟踪master,可以指定分支。 git config -f .gitmodules submodule.submodule_name.branch branch_name 协作者拉取git pull #拉取，submodule有更新会提示但不会拉取git submodule update --init #拉取submoduled代码 有子模块加上 --recursive git pull --recurse-submodules #自动拉取子模块git config submodule.recurse true #修改配置，每次直接执行git pull 即可， Git会给每个拥有 `--recurse-submodules` 选项的命令总是递归的子模块中执行，除了`git clone`子模块更改URL#copy 新的地址到本地的config中git submodule sync --recursive #同步git submodule update --init --recursive #重新从新的URL拉取推送检查git push --recurse-submodules=check #推送主模块时会检测子模块是否被推送,如果子模块没有推送，会有提示且本次推送失败git config push.recurseSubmodules check #更改配置，直接运行git push 就会检测git push --recurse-submodules=on-demand #会进入到未推送的子仓库进行推送，之后在推送主仓库，如果子仓库失败，则主仓库也失败git config push.recurseSubmodules on-demand #自动推送子模块遍历git submodule foreach &#39;git stash&#39; #暂存所有子模块的更改git submodule foreach &#39;git checkout -b featureA&#39; #创建一个新分支删除submodulegit submodule deinit xxxgit submodule status =&amp;gt; -eec46113680f9b9bd01ff14243da68017939b771 tools 清理.gitmodules相关xxx配置 清理.git/modules相关xxx配置 清理config相关xxx配置 清理xxx文件夹 清理缓存git rm --cached xxx好用的别名git config alias.sdiff &#39;!&#39;&quot;git diff &amp;amp;&amp;amp; git submodule foreach &#39;git diff&#39;&quot;git config alias.spush &#39;push --recurse-submodules=on-demand&#39;git config alias.supdate &#39;submodule update --remote --merge&#39;分支小问题(version &amp;lt; 2.13)master分支没有submodule,切换一个新的分支添加submodule,再次切换到master,会发现submodule文件夹还在,运行命令清理掉，如果再次切换到带有submodule分支，需要重建submodule submodule update --init git clean -fdx git checkout --recurse-submodules master #新版带`--recurse-submodules`切换则不会出现问题其它小问题协作者通过git pull拉取代码，然后通过git submodule update --remote拉取submodule代码，你会发现submodule分支从之前的master变为一个新的分支，如果你此时更改了submodule的代码，然后回到主工程修改代码，想通过git push --recurse-submodules=on-demand一并提交时，发现submodule会提交失败，并提示如下命令:git push origin HEAD:&amp;lt;name-of-remote-branch&amp;gt; 你可以按照提示操作，git会直接推送submodule，然后回到主工程手动推送。 你可以进入submodule，切换到master，然后merge刚才的修改，再次回到主工程，使用命令统一推送。 最优的方式是保持submodule为固定的master分支，每次更新时使用git submodule update --remote --merge,或者别名supdate,这样submodule就不会变更分支了。" }, { "title": "Homebrew", "url": "/posts/brew/", "categories": "开发, 工具", "tags": "tools", "date": "2022-03-22 09:24:00 +0800", "snippet": "Mac上神奇，缺失的包管理工具，下载软件爽的起飞~安装/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;基本操作#安装软件brew install cocoapods #命令行工具brew install --cask firefox #图形工具#卸载软件brew uninstall cocoapods#查看软件信息brew info cocoapods#查看已安装软件brew list#搜索软件brew search cocoapdos#查看是否有更新brew outdated#升级软件brew upgrade fastlane#清理旧的软件brew cleanup brew cleanup cocoapods#检查homebrew环境brew doctor#更新homebrewbrew update" }, { "title": "SSH", "url": "/posts/ssh/", "categories": "开发, 工具", "tags": "tools", "date": "2022-03-21 10:24:00 +0800", "snippet": "安装（Ubuntu）sudo apt-get install openssh-server 查看状态ps -ef | grep ssh连接ssh root@ip_addressssh config方便管理多个ssh,配置文件存放在~/.ssh/config Host 别名 HostName 主机名 Port 端口 User 用户名 IdentityFile 密钥文件的路径 Host &quot;running&quot; HostName ip_address Port 22 User root IdentityFile ~/.ssh/running IdentitiesOnly yesssh key 使用非对称加密方式生成公钥和私钥 私钥存放在本地~/.ssh 公钥对外开放，存放在服务器的~/.ssh/authorized_keys #生成公钥私钥ssh-keygen#指定加密算法，邮箱ssh-keygen -t ed25519 -C &quot;xxxxx@xxxxx.com&quot; #rsa,dsa#本地加载私钥ssh-add ~/.ssh/running#复制公钥到服务器brew intall ssh-copy-id #如果没有ssh-copy-id root@ip_address其它配置# 配置文件 /etc/ssh/sshd_config# 更改端口号Port 22 -&amp;gt; 358ssh root@ip_address -p 358# 禁止密码登录PasswordAuthentication yes -&amp;gt; no# 禁止root登录PermitRootLogin yes -&amp;gt; no" }, { "title": "Git", "url": "/posts/git/", "categories": "开发, 工具", "tags": "tools", "date": "2022-03-20 10:24:00 +0800", "snippet": "基本配置git config --global user.name &quot;name&quot; #作者git config --global user.email &quot;mail&quot; #邮箱git config --global init.defaultBranch main #修改init时仓库的默认名字好用的别名git config --global alias.st status git config --global alias.co checkoutgit config --global alias.ci commitgit config --global alias.br branchgit config --global alias.unstage &#39;reset HEAD&#39;git config --global alias.last &#39;log -1&#39;git config --global alias.lg &quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&#39; --abbrev-commit&quot;常用操作git init #仓库初始化git add filname #提交指定文件的修改到暂存区git add . #提交当前文件夹内的修改到暂存区git commit -m &quot;&quot; #暂存区提交到git commit --amend -m &quot;写错啦&quot; #修改最后一次提交的内容git status #查看哪些文件被修改git diff #查看具体被修改了什么，所有文件 git diff xxx #查看具体被修改了什么，指定文件git diff --cached #已经add但未commitgit log #提交的记录信息git reflog #提交的记录信息，包括回退的记录git log --graph --pretty==oneline --abbrev-commit #简短信息git remote add origin url #关联远程仓库gir remote -v #远程地址信息git push -u origin xxx #推送到远程的某个分之git push #推送git pull #拉取代码git clone url #克隆远程代码git clone -b dev url #克隆远程dev分之git tag v1.0 #打标签git tag #列出所有标签git tag v1.0 xxxxx #在某个commit id 上打标签git show v1.0 #列出1.0标签的具体信息git tag -a v1.0 -m &quot;增加了什么xxx&quot; id #打标签输入描述信息，ID是commit id git tag -d v1.0 #删除本地1.0标签git push origin v1.0 #推送1.0标签到远程服务器git push origin --tags #推送所有标签git tag -d v1.0 --&amp;gt; git push origin :refs/tags/v1.0 #删除远程的标签git reset --hard HEAD^ #回退到上一个版本，HEAD^^ HEAD~50 b9f5b13badc8git checkout -- file #放弃修改,没有addgit restore &amp;lt;file&amp;gt;... git reset head file #放弃修改,已经addgit restore --staged &amp;lt;file&amp;gt;... git branch dev #创建分支git checkout dev #切换分支 git checkout -b dev #创建分之并合并git branch #查看当前分支git merge dev #合并分支git branch -d dev #删除分支git branch -D dev #强行删除。git push origin :xxx #删除远程分支git merge --squash branch #合并分支不带分支的commit信息git branch --unset-upstream #解绑git push --set-upstream-to origin correct-branch-name #重新绑定远程某个分之git branch --set-upstream dev origin/dev #本地dev和远程关联git branch -m old_name new_name #分支重命名git stash #暂存修改git stash list #列出所有暂存信息git stash apply #恢复暂存git stash drop #删除暂存 git stash pop #apply -&amp;gt; drop 合并操作git rm -r --cached . |filename #取消追踪服务端创建git仓库git init --bare sample.git #创建空仓库git clone root@ip_address:/path/to/sample.git #拉取服务端仓库忽略文件.DS_Storexxxx工作区" }, { "title": "Vapor安装", "url": "/posts/Vapor%E5%AE%89%E8%A3%85/", "categories": "开发, 后台", "tags": "vapor, swift", "date": "2022-03-19 14:07:00 +0800", "snippet": "Vapor是Swift语言开发的Web框架。拿来学学，既能学习Swift又能学学后台开发，不错的选择~安装brew install vapor 新建项目vapor new todo #创建todo项目，是否使用fluent，选择数据库，是否需要leaf...vapor new todo -n #默认生成项目运行swift run or vapor run #会下载SPM依赖包访问http://127.0.0.1:8080由于网络因素，下载SPM依赖大概率会失败，Xcode不能设置代理，那么咱还可以这样做#前提终端已配置好代理，通过下面命令去下载xcodebuild -resolvePackageDependencies -scmProvider system # -y 打开项目vapor xcode -y遇到问题#清理一下vapor clean -u -s -g" }, { "title": "三月飞雪天", "url": "/posts/%E4%B8%89%E6%9C%88%E9%A3%9E%E9%9B%AA%E5%A4%A9/", "categories": "生活小记, 杂", "tags": "", "date": "2022-03-18 20:55:00 +0800", "snippet": "很久没有运动，很久没有学习了，折腾了两天博客，打算整理笔记，好记性不如烂笔头，该坚持的还要坚持~三月春暖花开，帝都下了两天大雪❄️，倒春寒？！嗯，就这样~" }, { "title": "HTML扫盲(一)", "url": "/posts/htm1/", "categories": "开发, 前端", "tags": "html", "date": "2022-02-02 11:24:00 +0800", "snippet": "骨架&amp;lt;!-- 定义文档类型 --&amp;gt;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;!-- 语言 --&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;!-- 网页的配置 --&amp;gt; &amp;lt;head&amp;gt; &amp;lt;!-- 字符集 gbk gb2312 --&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt; &amp;lt;!-- 标题 --&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;!-- 网页关键字，seo --&amp;gt; &amp;lt;meta name=&quot;keywords &amp;lt;!-- 网页描述， seo --&amp;gt; &amp;lt;meta name=&quot;description&quot; content=&quot;我是一名程序员&quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;!-- 网页主体 --&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;基本标签&amp;lt;!-- h1 ~ h6 --&amp;gt;&amp;lt;h1&amp;gt;标题标签&amp;lt;/h1&amp;gt;&amp;lt;!-- 不能嵌套h标签和p标签 --&amp;gt;&amp;lt;p&amp;gt;段落标签&amp;lt;/p&amp;gt;转义字符 &amp;amp;lt; &amp;lt; &amp;amp;gt; &amp;gt; &amp;amp;nbsp; 空格 &amp;amp;copy; © " }, { "title": "VSCode 插件", "url": "/posts/vscode%E6%8F%92%E4%BB%B6/", "categories": "开发, 工具", "tags": "tools", "date": "2022-02-01 23:55:00 +0800", "snippet": "前端开发插件open in browserSublime Text Keymap and Settings ImporterAuto Close TagAuto Rename TagLive Server" }, { "title": "路由器", "url": "/posts/r2s/", "categories": "生活小记, 杂", "tags": "openwrt", "date": "2022-01-23 20:55:00 +0800", "snippet": "某夕夕买的新设备，一款FriendlyElec NanoPi R2S路由器，1G内存，ARMv8架构的CPU。为何购买这个设备，故事还要从学习开始😂，因为各种不方便，产生了某个想法，机缘巧合PM同学推荐了这个小玩意儿，犹豫了两周，决定上车整来玩一下，玩好了就留下，玩不好挂咸鱼上打折出售😁。拿到货到了，找到两年前买的狗8，取下赠送的128G TF卡，刷上openwrt系统，找了个电源适配器，接好线路，上电😄，嗯，折腾就这么的开始了~嗯，用着还行~故事还要继续写，至于和这个小设备能擦出怎么样的火花，目前还不晓得~，也许大致的过程是这样， 刷机😄，刷机😂，刷机😠，静心学习，改造，稳定！大概也就这样，从入门到放弃^_^" }, { "title": "装机必备", "url": "/posts/%E8%A3%85%E6%9C%BA%E5%BF%85%E5%A4%87/", "categories": "开发, 工具", "tags": "tools, 装机必备", "date": "2022-01-01 21:55:00 +0800", "snippet": "前端工具Visual Studio Code命令行工具Homebrew" }, { "title": "新装备", "url": "/posts/%E4%B9%A6%E6%A1%8C/", "categories": "生活小记, 杂", "tags": "", "date": "2021-11-21 20:55:00 +0800", "snippet": "13年购买于中环Apple商店，logo还能发光，扩展接口很齐全，今天光荣退役了。继任者到货，整理一下书桌，添置点小玩意儿^_^物品清单: MacBook Pro 16” M1 Max ¥23499 LG 27” 2K HDR IPS屏 Ergo人体工学±280旋转支架 ¥2399 米家台灯1S ¥179 JRC 笔记本支架 ¥139 华为无线充电器 ¥99 K1 SE机械键盘 ¥398 秒空鼠标 ¥699 小米桌垫 ¥49 索尼WH-H900N 耳机 ¥1179 IDÅSEN 伊朵森 电动升降桌 ¥3999 ALEFJÄLL 阿勒夫耶 办公椅 ¥1999还有一盆发财树，希望能发财，大概就这些，喜欢的可以入手~" } ]
