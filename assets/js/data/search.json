[ { "title": "Git基本操作", "url": "/posts/git/", "categories": "Tools", "tags": "git", "date": "2022-03-20 10:24:00 +0800", "snippet": "基本配置git config --global user.name &quot;name&quot; #作者git config --global user.email &quot;mail&quot; #邮箱好用的别名git config --global alias.st status git config --global alias.co checkoutgit config --global alias.ci commitgit config --global alias.br branchgit config --global alias.unstage &#39;reset HEAD&#39;git config --global alias.last &#39;log -1&#39;git config --global alias.lg &quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&#39; --abbrev-commit&quot;常用操作git init #仓库初始化git add filname #提交指定文件的修改到暂存区git add . #提交当前文件夹内的修改到暂存区git commit -m &quot;&quot; #暂存区提交到git commit --amend -m &quot;写错啦&quot; #修改最后一次提交的内容git status #查看哪些文件被修改git diff #查看具体被修改了什么，所有文件 git diff xxx #查看具体被修改了什么，指定文件git log #提交的记录信息git reflog #提交的记录信息，包括回退的记录git log --graph --pretty==oneline --abbrev-commit #简短信息git remote add origin url #关联远程仓库gir remote -v #远程地址信息git push -u origin xxx #推送到远程的某个分之git push #推送git pull #拉取代码git clone url #克隆远程代码git clone -b dev url #克隆远程dev分之git tag v1.0 #打标签git tag #列出所有标签git tag v1.0 xxxxx #在某个commit id 上打标签git show v1.0 #列出1.0标签的具体信息git tag -a v1.0 -m &quot;增加了什么xxx&quot; id #打标签输入描述信息，ID是commit id git tag -d v1.0 #删除本地1.0标签git push origin v1.0 #推送1.0标签到远程服务器git push origin --tags #推送所有标签git tag -d v1.0 --&amp;gt; git push origin :refs/tags/v1.0 #删除远程的标签git reset --hard HEAD^ #回退到上一个版本，HEAD^^ HEAD~50 b9f5b13badc8git checkout -- file #放弃修改,没有addgit restore &amp;lt;file&amp;gt;... git reset head file #放弃修改,已经addgit restore --staged &amp;lt;file&amp;gt;... git branch dev #创建分支git checkout dev #切换分支 git checkout -b dev #创建分之并合并git branch #查看当前分支git merge dev #合并分支git branch -d dev #删除分支git branch -D dev #强行删除。git push origin :xxx #删除远程分支git merge --squash branch #合并分支不带分支的commit信息git branch --unset-upstream #解绑git push --set-upstream-to origin correct-branch-name #重新绑定远程某个分之git branch --set-upstream dev origin/dev #本地dev和远程关联git branch -m old_name new_name #分支重命名git stash #暂存修改git stash list #列出所有暂存信息git stash apply #恢复暂存git stash drop #删除暂存 git stash pop #apply -&amp;gt; drop 合并操作git rm -r --cached . |filename #取消追踪服务端创建git仓库git init --bare sample.git #创建空仓库git clone root@ip_address:/path/to/sample.git #拉取服务端仓库忽略文件.DS_Storexxxx工作区" } ]
